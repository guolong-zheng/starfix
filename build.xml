<?xml version="1.0" ?>

<project name="starlib" default="build" basedir=".">

  <!-- ========================== COMMON SECTION ========================== -->

  <property environment="env"/>

  <!-- this is where we get the 'jpf.core' location from -->
  <property file="${user.home}/.jpf/site.properties"/>

  <!-- if there is none, default to a 'jpf-core' peer dir -->
  <property name="jpf-core" value = "../jpf-core"/>

  <!-- get the dependent project properties -->
  <property file="${jpf-core}/jpf.properties"/>

  <!-- compiler settings -->
  <property name="src_level"     value="8"/>
  <property name="debug"         value="on"/>
  <property name="deprecation"   value="on"/>


  <!-- generic classpath settings -->
  <path id="lib.path">

    <!-- our own classes and libs come first -->
    <pathelement location="build/main"/>
    <!-- we don't have these
    <pathelement location="build/peers"/>
    -->
    <fileset dir=".">
        <include name="lib/*.jar"/>
    </fileset>

    <!-- add projects we depend on -->
    <pathelement path="${jpf-core.native_classpath}"/>

  </path>

  <!-- init: common initialization -->
  <target name="-init">
    <tstamp/>

    <mkdir dir="build"/>               <!-- the build root -->

    <!-- the things that have to be in the classpath of whatever runs Ant -->
    <available property="have_javac" classname="com.sun.tools.javac.Main"/>
    <fail unless="have_javac">no javac found</fail>


    <available file="src/main"        type="dir" property="have_main"/>
    <available file="src/jpf"        type="dir" property="have_jpf"/>

    <!-- optionally set the required artifacts here
    <fail unless="have_main">no src/main</fail>
    -->

  </target>


  <!-- ======================= COMPILE SECTION ============================= -->

  <!-- public compile -->
  <target name="compile" depends="-init,-compile-main,-compile-jpf"
          description="compile all sources" >
  </target>

  <target name="-compile-main" if="have_main">
    <mkdir dir="build/main"/>
    <javac srcdir="src/main" destdir="build/main" includeantruntime="false"
           debug="${debug}" source="${src_level}" deprecation="${deprecation}"
           classpathref="lib.path"/>
  </target>

  <target name="-compile-jpf" if="have_jpf">
    <mkdir dir="build/jpf"/>
    <javac srcdir="src/jpf" destdir="build/jpf" includeantruntime="false"
           debug="${debug}" source="${src_level}" deprecation="${deprecation}"
           classpathref="lib.path"/>
  </target>

  <!-- ======================= MISC SECTION ================================ -->

  <!-- build jars -->
  <target name="build" depends="compile,-jar-star,-jar-jpf"
        description="generate the ${ant.project.name} jar files" >
  </target>

  <target name="-jar-star">
    <jar jarfile="build/${ant.project.name}.jar" whenmanifestonly="skip">
      <fileset dir="build/main" erroronmissingdir="false"/>
    </jar>
  </target>

  <target name="-jar-jpf">
    <jar jarfile="build/${ant.project.name}-jpf.jar" whenmanifestonly="skip">
      <fileset dir="build/jpf" erroronmissingdir="false"/>
    </jar>
  </target>

  <!-- public clean: cleanup from previous tasks/builds -->
  <target name="clean">
    <delete dir="build" />
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="no" />
      <fileset dir="." includes="**/*.bak" defaultexcludes="no" />
      <fileset dir="." includes="**/error.xml" />
    </delete>
  </target>

</project>
